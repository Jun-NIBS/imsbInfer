\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

<<eval=FALSE>>=
library(imsbInfer)
data(feature_alignment_requant)

exp = feature_alignment_requant[-(3),]
feature_alignment_requant[3,]
dim(feature_alignment_requant)
dim(exp)

aligtable = as.data.table(exp)
#fix orignal filename
aligtable$align_origfilename = basename(as.character(aligtable$align_origfilename))
protmapping = aligtable[,list(transition_group_id,ProteinName)]
setkey(protmapping,transition_group_id)
  
#fix missing keys by adding NA
setkey(aligtable,transition_group_id,align_origfilename)
aligtable = aligtable[CJ(unique(transition_group_id), unique(align_origfilename))]


dim(SDat)
SDat = removeDecoys(SDat)
dim(SDat)

SD2 = keepRTRange(SDat,c(3000,4000))
dim(SD2)

data = SDat
RT = apply(data$rt[,2:dim(data$rt)[2],with=FALSE],1,median)
data$rt[,2:dim(data$rt)[2],with=F]


SDat = list(a = as.data.table(data.frame()), b=as.data.table(data.frame()))
class(SDat) = "brum"
length(SDat)

res = correctIntRT(SDat,k=301)

@

<<>>=
data(feature_alignment_requant)
experiment = read2msExperiment(feature_alignment_requant)
dim(experiment$intensity)

experiment = removeDecoys(experiment)
dim(experiment)

#as reference choose run with fewest NA's
firstDataColumn = 2
intens = experiment$intensity[,firstDataColumn:dim(experiment)[2], with=FALSE]
(intens)
nas = apply( intens, 2 , function(x){sum(is.na(x))} )
idx = which(nas == min(nas))
# if more than one with few NA's than choose dataset with max median
if(length(idx) > 1){
  ma = apply(experiment$intensity[,idx,with=FALSE],2,median,na.rm=TRUE)
  id <-which(ma == max(ma))
  idx <- idx[id]
}
reference=intens[[idx]]
#compute median retention time
RT = apply(experiment$rt[,firstDataColumn:dim(experiment)[2],with=FALSE],1,median)
rto = order(RT)

reference = reference[rto]
RT = RT[rto]
intens = experiment$intensity[rto]
k=501
for(i in 2:dim(intens)[2])
{
  intensV = intens[[i]]
  corrected = correctIntRT( unlist(reference), unlist(intensV) , (RT) , plot=F , k=k )
  intens[[i]] = corrected
}
experiment$intensity = intens



@

<<>>=
data(feature_alignment_requant)
experiment = read2msExperiment(feature_alignment_requant)

  firstDataColumn = 2
  RT = apply(experiment$rt[ , firstDataColumn:dim(data)[2] , with=FALSE ] , 1 , median )
  #order relevant data by retention time
  rto = order(RT)
  experiment$intensity = experiment$intensity[rto]
  experiment$score = experiment$score[rto]
  experiment$rt = experiment$rt[rto]
  experiment$pepinfo = experiment$pepinfo[rto]
  return(experiment)
@



\end{document}