\documentclass{article}

\title{Aggregate Proteins and normalize data}
\author{W. Wolski}
\begin{document}
\SweaveOpts{concordance=TRUE}
\maketitle

Before running this Sweave File run the PrerpareForMSStatsEH2.Rnw file.

<<echo=FALSE>>=
library(compiler)
enableJIT(2)

@

Parameter setup
<<parameter setup,eval=TRUE>>=
rm(list=ls())
library(imsbInfer)
TOPPeptidesPerProtein = 3
# this file is generated using the PrepareForMSStatsEH2 script...
RAW_OUTPUT="output/ProteinQuant3TOP3TOPRAW.txt"
TRANSFORMED_OUTPUT="output/ProteinQuant3TOP3TOPRAWTransformed.txt"
TRANSFORMED_RT_OUTPUT="output/ProteinQuant3TOP3TOPRAWTransformed_RT.txt"


@

Compute peptide intensities from transitions:

<<aggregateProteins>>=
load("output/msexporiTrans.rda")

specPep = aggregatePeptides(msexpori)
specPep = orderByRT(specPep)
@

Remove peptides that have a missing values:

<<keepOnlyNonNa,echo=FALSE>>=
tmp = apply(specPep$Intensity, 1, function(x){ sum(is.na(x)) == 0 })
specPep = subset( specPep, tmp )
@

Next protein quantities for downstream analysis are computed using the function aggregateProteins

<<echo=FALSE>>=
specPepST = selectTopPeptidesPerProtein(specPep,peptop = TOPPeptidesPerProtein)
specProtST= aggregateProteins(specPepST)

write.table(specProtST$Intensity,RAW_OUTPUT)
@

Apply asinh transformation and robust scaling.

<<>>=
specProtST$Intensity = asinh(specProtST$Intensity)
specProtST$Intensity = robustscale(specProtST$Intensity)
write.table(specProtST$Intensity,TRANSFORMED_OUTPUT)

@

<<fig=TRUE>>=
pln = specProtST$Intensity
colnames(pln)
sampcol<-split2table(colnames(pln))[,1]

pln = robustscale(pln)
par(mar=c(4,4,4,4))

classes = as.numeric(as.factor(sampcol))
nrclasses = length(unique(classes))
nrclasses = max(3,min(11,nrclasses))
library(RColorBrewer)
colors = brewer.pal(nrclasses, "PiYG")
simpleheatmap(pln,ColSideColors= colors[classes])
@


RT dependent normalization
<<>>=
specPepRT = correctIntRTv1(specPep,plot=T)
dim(specPepRT)

specPepST = selectTopPeptidesPerProtein(specPepRT,peptop = TOPPeptidesPerProtein)
dim(specPepST)
specProtST= aggregateProteins(specPepST)

specProtST$Intensity = asinh(specProtST$Intensity)
specProtST$Intensity = robustscale(specProtST$Intensity)

pln = specProtST$Intensity

write.table(specProtST$Intensity,file = TRANSFORMED_RT_OUTPUT)

sampcol<-split2table(colnames(pln))[,1]

pln = robustscale(pln)
par(mar=c(4,4,4,4))

classes = as.numeric(as.factor(sampcol))
nrclasses = length(unique(classes))
nrclasses = max(3,min(11,nrclasses))
library(RColorBrewer)
colors = brewer.pal(nrclasses, "PiYG")
simpleheatmap(pln,ColSideColors= colors[classes])

@


\end{document}
